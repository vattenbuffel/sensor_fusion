clc; clear; close all;

absTol = 1e-1;
relTol = 5e-2;


N = 10000;

n = randi(5,1);
m = randi(n,1);

N = m*N;

% Define state sequence
X = rand(n,N+1);

% Define measurement model
H = randn(m,n);
V = rand(m,m);
R = V*diag(10*rand(m,1))*V';

% Generate measurements
Y = genLinearMeasurementSequence(X, H, R);

Rest = cov((Y-H*X(:, 2:N+1))');
assert(size(Y,1) == m, 'Y has the wrong measurement dimension');
assert(size(Y,2) == N, 'Y should have N columns');

Rest = cov((Y-H*X(:, 2:N+1))');
assert(all(all((mean(Y-H*X(:, 2:N+1),2) < absTol))), 'Measurement noise is not zeros mean');
assert(all(all((abs(Rest-R) < relTol*R))), 'Measurement noise covariance is not within tolerances');

%%

function Y = genLinearMeasurementSequence(X, H, R)
%GENLINEARMEASUREMENTSEQUENCE generates a sequence of observations of the state 
% sequence X using a linear measurement model. Measurement noise is assumed to be 
% zero mean and Gaussian.
%
%Input:
%   X           [n x N+1] State vector sequence. The k:th state vector is X(:,k+1)
%   H           [m x n] Measurement matrix
%   R           [m x m] Measurement noise covariance
%
%Output:
%   Y           [m x N] Measurement sequence
%

% your code here
%%%%%%%%%%%%%%%%
Y = H*X + mvnrnd(zeros(size(R,1),1), R, size(X,2)).'
%%%%%%%%%%%%%%%%
end

function X = genLinearStateSequence(x_0, P_0, A, Q, N)
%GENLINEARSTATESEQUENCE generates an N-long sequence of states using a 
%    Gaussian prior and a linear Gaussian process model
%
%Input:
%   x_0         [n x 1] Prior mean
%   P_0         [n x n] Prior covariance
%   A           [n x n] State transition matrix
%   Q           [n x n] Process noise covariance
%   N           [1 x 1] Number of states to generate
%
%Output:
%   X           [n x N+1] State vector sequence
%

% Your code here
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% The first position is distributed normally with mean x_0 and sigma P_0
X = mvnrnd(x_0, P_0).'


for i = 1:N
    % Every subsecent position is distributed normally with mean as A*x_previous and sigma Q
    X = [X mvnrnd(A*X(:,end), Q).'];
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

end